{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yogid\\\\OneDrive\\\\Desktop\\\\Tops\\\\Rajesh\\\\project\\\\src\\\\Website\\\\Pages\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const redirect = useNavigate();\n  const [data, setData] = useState({});\n  useEffect(() => {\n    if (localStorage.getItem('userid')) {\n      fetch();\n    } else {\n      redirect('/');\n    }\n  }, []);\n\n  // fetch data from api \n  const fetch = async () => {\n    const res = await axios.get(`http://localhost:3000/user/${localStorage.getItem('userid')}`);\n    console.log(res.data);\n    setData(res.data); // set data from api in data var state\n  };\n  const [formvalue, setFormvalue] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    mobile: \"\",\n    img: \"\"\n  });\n  const editdata = async id => {\n    const res = await axios.get(`http://localhost:3000/user/${id}`);\n    console.log(res.data);\n    setFormvalue(res.data);\n  };\n  const getform = e => {\n    setFormvalue({\n      ...formvalue,\n      [e.target.name]: e.target.value\n    });\n    console.log(formvalue);\n  };\n  const validation = () => {\n    var result = true;\n    if (formvalue.name == \"\") {\n      toast.error('Name Field is required');\n      result = false;\n      return false;\n    }\n    if (formvalue.email == \"\") {\n      toast.error('Email Field is required');\n      result = false;\n      return false;\n    }\n    if (formvalue.mobile == \"\") {\n      toast.error('Mobile Field is required');\n      result = false;\n      return false;\n    }\n    if (formvalue.img == \"\") {\n      toast.error('Image Field is required');\n      result = false;\n      return false;\n    }\n    return result;\n  };\n  const submithandel = async e => {\n    e.preventDefault(); // stop page reload\n    if (validation()) {\n      const res = await axios.patch(`http://localhost:3000/user/${formvalue.id}`, formvalue);\n      console.log(res);\n      if (res.status == 200) {\n        setFormvalue({\n          ...formvalue,\n          name: \"\",\n          email: \"\",\n          mobile: \"\",\n          img: \"\"\n        });\n        toast.success('Update success');\n        fetch();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"wXKX/YqGN/0kcTdPm34NtpkOOek=\", true);\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Profile","_s","redirect","useNavigate","data","setData","useState","useEffect","localStorage","getItem","fetch","res","axios","get","console","log","formvalue","setFormvalue","id","name","email","mobile","img","editdata","getform","e","target","value","validation","result","toast","error","submithandel","preventDefault","patch","status","success","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/yogid/OneDrive/Desktop/Tops/Rajesh/project/src/Website/Pages/Profile.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nfunction Profile() {\r\n    \r\n    const redirect = useNavigate();\r\n    const [data, setData] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('userid')) {\r\n            fetch()\r\n        }\r\n        else {\r\n            redirect('/')\r\n        }\r\n    },[]);\r\n\r\n    // fetch data from api \r\n    const fetch = async () => {\r\n        const res = await axios.get(`http://localhost:3000/user/${localStorage.getItem('userid')}`);\r\n        console.log(res.data);\r\n        setData(res.data); // set data from api in data var state\r\n    }\r\n\r\n\r\n    const [formvalue,setFormvalue]=useState({\r\n        id:\"\",\r\n        name:\"\",\r\n        email:\"\",\r\n        mobile:\"\",\r\n        img:\"\",\r\n      });\r\n\r\n    const editdata = async (id) => {\r\n        const res = await axios.get(`http://localhost:3000/user/${id}`);\r\n        console.log(res.data);\r\n        setFormvalue(res.data);\r\n    }\r\n\r\n      const getform=(e)=>{\r\n        setFormvalue({...formvalue,[e.target.name]:e.target.value});\r\n        console.log(formvalue);\r\n      }\r\n    \r\n      const validation=()=>{\r\n    \r\n        var result=true;\r\n        if(formvalue.name==\"\")\r\n        {\r\n           toast.error('Name Field is required');\r\n            result=false;\r\n            return false;\r\n        }\r\n        if(formvalue.email==\"\")\r\n        {\r\n          toast.error('Email Field is required');\r\n            result=false;\r\n            return false;\r\n        }\r\n     \r\n        if(formvalue.mobile==\"\")\r\n        {\r\n          toast.error('Mobile Field is required');\r\n            result=false;\r\n            return false;\r\n        }\r\n        if(formvalue.img==\"\")\r\n        {\r\n          toast.error('Image Field is required');\r\n            result=false;\r\n            return false;\r\n        }\r\n        return result;\r\n    \r\n      }\r\n    \r\n      const submithandel = async (e) => {\r\n        e.preventDefault(); // stop page reload\r\n        if(validation())\r\n        {\r\n          const res = await axios.patch(`http://localhost:3000/user/${formvalue.id}`,formvalue);\r\n          console.log(res);\r\n          if(res.status==200)\r\n          {\r\n            setFormvalue({...formvalue,name:\"\",email:\"\",mobile:\"\",img:\"\"});\r\n            toast.success('Update success');\r\n            fetch();\r\n          }\r\n        }\r\n      }\r\n    \r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}